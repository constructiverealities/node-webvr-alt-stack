#!/usr/bin/env python
import sys
import re

black  = '\x1b[30m\\1\x1b[0m'
red    = '\x1b[31m\\1\x1b[0m'
green  = '\x1b[32m\\1\x1b[0m'
yellow = '\x1b[33m\\1\x1b[0m'
blue   = '\x1b[34m\\1\x1b[0m'
magenta = '\x1b[35m\\1\x1b[0m'
cyan   = '\x1b[36m\\1\x1b[0m'
white  = '\x1b[37m\\1\x1b[0m'

note = re.compile(r"""(
    test-note-color
|   Attached\ HID\ Devices
|   OpenCamera\(\)
|   Setting\ \w+\ as\ the\ origin\ of\ universe
)""", re.VERBOSE)

success = re.compile(r"""(
    test-success-color
|   HMD\ Model:
|   Found\ Camera\ at\ USB
|   Opened\ tracked\ camera
|   HmdDeviceConnect
|   tdm\ sync\ acquired
|   Base\ \w+\ recorded
|   Base\ \w+\ observed
|   Successfully\ fetched\ gyro/accelerometer
|   BOOTSTRAPPED\ base
|   CALIBRATED\ base
|   Saved\ LighthouseDB
|   Connected\ to\ receiver
)""", re.VERBOSE)

warning = re.compile(r"""(
    test-warning-color
|   Can't\ start\ tracking
|   Resetting\ tracking
|   IMU\ went\ off\ scale
|   RestartBootstrap
|   Can't\ add\ a\ secondary\ base
# |   Samples\ didn't\ yield\ successful\ bootstrap\ pose
)""", re.VERBOSE)

failure = re.compile(r"""(
    test-failure-color
|   No\ devices
|   Calibration\ failed
)""", re.VERBOSE)

def colorize (line):
    # failure first
    line = re.sub(failure,red,line)
    line = re.sub(warning,yellow,line)
    line = re.sub(success,green,line)
    line = re.sub(note,blue,line)
    return line

re_ioctl = re.compile(r'^ioctl \([GS]FEATURE\): Broken pipe\s*')
def main():
    while True:
        line = sys.stdin.readline()
        if not line: break
        line = re.sub(re_ioctl,"",line)
        if line == "": continue
        sys.stdout.write(colorize(line))
if __name__=='__main__':
    sys.exit(main())
